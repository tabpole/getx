import{_ as e,c as t,o as a,a as s}from"./app.93298e25.js";const m=JSON.parse('{"title":"Create project","description":"","frontmatter":{"prev":{"text":"Install on Linux","link":"getting_started/install_on_linux.md"},"next":false},"headers":[{"level":2,"title":"Init","slug":"init","link":"#init","children":[]}],"relativePath":"commands/project.md","lastUpdated":1679229744000}'),n={name:"commands/project.md"},l=s(`<h1 id="create-project" tabindex="-1">Create project <a class="header-anchor" href="#create-project" aria-hidden="true">#</a></h1><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">project</span></span>
<span class="line"></span></code></pre></div><p>Using to generate a new project, you can choose between Flutter and get_server, after creating the default directory, it will run a get init next command</p><h2 id="init" tabindex="-1">Init <a class="header-anchor" href="#init" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span></code></pre></div><p>Use this command with care it will overwrite all files in the lib folder. It allows you to choose between two structures, getx_pattern and clean architecture.</p>`,6),o=[l];function r(c,i,p,d,h,_){return a(),t("div",null,o)}const g=e(n,[["render",r]]);export{m as __pageData,g as default};
