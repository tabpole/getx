import{_ as s,c as n,o as a,a as l}from"./app.17cd6fdc.js";const F=JSON.parse('{"title":"GetConnect","description":"","frontmatter":{},"headers":[{"level":2,"title":"Default configuration","slug":"default-configuration","link":"#default-configuration","children":[]},{"level":2,"title":"Custom configuration","slug":"custom-configuration","link":"#custom-configuration","children":[]}],"relativePath":"utils/get_connect.md","lastUpdated":1679248851000}'),p={name:"utils/get_connect.md"},e=l(`<h1 id="getconnect" tabindex="-1">GetConnect <a class="header-anchor" href="#getconnect" aria-hidden="true">#</a></h1><p>GetConnect is an easy way to communicate from your back to your front with http or websockets</p><h2 id="default-configuration" tabindex="-1">Default configuration <a class="header-anchor" href="#default-configuration" aria-hidden="true">#</a></h2><p>You can simply extend GetConnect and use the GET/POST/PUT/DELETE/SOCKET methods to communicate with your Rest API or websockets.</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UserProvider</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GetConnect</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Get request</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Future</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">&gt; </span><span style="color:#82AAFF;">getUser</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;"> id) </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&#39;http://youapi/users/$</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#C3E88D;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Post request</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Future</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">&gt; </span><span style="color:#82AAFF;">postUser</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">Map</span><span style="color:#A6ACCD;"> data) </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&#39;http://youapi/users&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> body</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> data)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Post request with File</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Future</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">CasesModel</span><span style="color:#A6ACCD;">&gt;&gt; </span><span style="color:#82AAFF;">postCases</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">List</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;">&gt; image) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> form </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FormData</span><span style="color:#A6ACCD;">({</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C3E88D;">&#39;file&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MultipartFile</span><span style="color:#A6ACCD;">(image</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> filename</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;avatar.png&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C3E88D;">&#39;otherFile&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MultipartFile</span><span style="color:#A6ACCD;">(image</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> filename</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;cover.png&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&#39;http://youapi/users/upload&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> form)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">GetSocket</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">userMessages</span><span style="color:#A6ACCD;">() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">socket</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&#39;https://yourapi/users/socket&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="custom-configuration" tabindex="-1">Custom configuration <a class="header-anchor" href="#custom-configuration" aria-hidden="true">#</a></h2><p>GetConnect is highly customizable You can define base Url, as answer modifiers, as Requests modifiers, define an authenticator, and even the number of attempts in which it will try to authenticate itself, in addition to giving the possibility to define a standard decoder that will transform all your requests into your Models without any additional configuration.</p><div class="language-dart line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HomeProvider</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GetConnect</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">@override</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onInit</span><span style="color:#A6ACCD;">() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// All request will pass to jsonEncode so CasesModel.fromJson()</span></span>
<span class="line"><span style="color:#A6ACCD;">    httpClient</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">defaultDecoder </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CasesModel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fromJson</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    httpClient</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">baseUrl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;https://api.covid19api.com&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// baseUrl = &#39;https://api.covid19api.com&#39;; // It define baseUrl to</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// Http and websockets if used with no [httpClient] instance</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// It&#39;s will attach &#39;apikey&#39; property on header from all requests</span></span>
<span class="line"><span style="color:#A6ACCD;">    httpClient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addRequestModifier</span><span style="color:#A6ACCD;">((request) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers[</span><span style="color:#C3E88D;">&#39;apikey&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;12345678&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// Even if the server sends data from the country &quot;Brazil&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// it will never be displayed to users, because you remove</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// that data from the response, even before the response is delivered</span></span>
<span class="line"><span style="color:#A6ACCD;">    httpClient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addResponseModifier</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">CasesModel</span><span style="color:#A6ACCD;">&gt;((request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> response) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">CasesModel</span><span style="color:#A6ACCD;"> model </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (model</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">countries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&#39;Brazil&#39;</span><span style="color:#A6ACCD;">)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        model</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">countries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&#39;Brazilll&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    httpClient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addAuthenticator</span><span style="color:#A6ACCD;">((request) </span><span style="color:#89DDFF;font-style:italic;">async</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">&quot;http://yourapi/token&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> token </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body[</span><span style="color:#C3E88D;">&#39;token&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// Set the header</span></span>
<span class="line"><span style="color:#A6ACCD;">      request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">headers[</span><span style="color:#C3E88D;">&#39;Authorization&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;$</span><span style="color:#A6ACCD;font-style:italic;">token</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    })</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//Autenticator will be called 3 times if HttpStatus is</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//HttpStatus.unauthorized</span></span>
<span class="line"><span style="color:#A6ACCD;">    httpClient</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">maxAuthRetries </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">@override</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Future</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">Response</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">CasesModel</span><span style="color:#A6ACCD;">&gt;&gt; </span><span style="color:#82AAFF;">getCases</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;"> path) </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(path)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div>`,8),o=[e];function t(r,c,C,i,y,A){return a(),n("div",null,o)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
